{"ast":null,"code":"// import { useEffect, useState } from \"react\";\n// import { useNavigate, useOutletContext, useParams } from \"react-router-dom\";\n// import Input from \"./form/Input\";\n// import Select from \"./form/Select\";\n// import TextArea from \"./form/TextArea\";\n// import Checkbox from \"./form/Checkbox\";\n// import { Swal } from \"sweetalert2\";\n// const EditMovie = () => {\n//   const navigate = useNavigate();\n//   const { jwtToken } = useOutletContext();\n//   const [error, setError] = useState(null);\n//   const [errors, setErrors] = useState([]);\n//   const mpaaOptions = [\n//     { id: \"G\", value: \"G\" },\n//     { id: \"PG\", value: \"PG\" },\n//     { id: \"PG13\", value: \"PG13\" },\n//     { id: \"R\", value: \"R\" },\n//     { id: \"NC17\", value: \"NC17\" },\n//     { id: \"18A\", value: \"18A\" },\n//   ];\n//   const hasError = (key) => {\n//     return errors.indexOf(key) !== -1;\n//   };\n//   const [movie, setMovie] = useState({\n//     id: 0,\n//     title: \"\",\n//     release_date: \"\",\n//     runtime: \"\",\n//     mpaa_rating: \"\",\n//     description: \"\",\n//     genres: [],\n//     genres_array: [Array(13).fill(false)],\n//   });\n//   ///// Get the ID from the URL by using useParams() hook......\n//   let { id } = useParams();\n//   if (id === undefined) {\n//     id = 0;\n//   }\n//   useEffect(() => {\n//     if (jwtToken === \"\") {\n//       navigate(\"/login\");\n//       return;\n//     }\n//     if (id === 0) {\n//       /// Adding a movie....\n//       setMovie({\n//         id: 0,\n//         title: \"\",\n//         release_date: \"\",\n//         runtime: \"\",\n//         mpaa_rating: \"\",\n//         description: \"\",\n//         genres: [],\n//         genres_array: [Array(13).fill(false)],\n//       });\n//       const headers = new Headers();\n//       headers.append(\"Content-Type\", \"application/json\");\n//       const requestOptions = {\n//         method: \"GET\",\n//         headers: headers,\n//       };\n//       fetch(`/genres`, requestOptions)\n//         .then((response) => response.json())\n//         .then((data) => {\n//           const checks = [];\n//           data.forEach((g) => {\n//             checks.push({ id: g.id, checked: false, genre: g.genre });\n//           });\n//           setMovie((m) => ({\n//             ...m,\n//             genres: checks,\n//             genres_array: [],\n//           }));\n//         })\n//         .catch((err) => {\n//           console.log(err);\n//         });\n//     } else {\n//       /// edit an existing movie....\n//     }\n//   }, [id, jwtToken, navigate]);\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n//     let errors = [];\n//     let required = [\n//       {\n//         field: movie.title,\n//         name: \"title\",\n//       },\n//       {\n//         field: movie.release_date,\n//         name: \"release_date\",\n//       },\n//       {\n//         field: movie.runtime,\n//         name: \"runtime\",\n//       },\n//       {\n//         field: movie.description,\n//         name: \"description\",\n//       },\n//       {\n//         field: movie.mpaa_rating,\n//         name: \"mpaa_rating\",\n//       },\n//     ];\n//     required.forEach(function (obj) {\n//       if (obj.field === \"\") {\n//         errors.push(obj.name);\n//       }\n//     });\n//     if (movie.genres_array.length === 0) {\n//       Swal.fire({\n//         title: \"Error!\",\n//         text: \"You must choose atleast one genre\",\n//         icon: \"error\",\n//         confirmButtonText: \"OK\",\n//       });\n//       errors.push(\"genres\");\n//     }\n//     setErrors(errors);\n//     if (errors.length > 0) {\n//       return false;\n//     }\n//     /// Passed the validation , so save the changes....\n//     const headers = new Headers();\n//     headers.append(\"Content-Type\", \"application/json\");\n//     headers.append(\"Authorization\", \"Bearer \" + jwtToken);\n//     /// Assume that we are adding a new movie......\n//     let method = \"PUT\";\n//     if (movie.id > 0) {\n//       method = \"PATCH\"; // Here PATCH is for updating a movie and PUT is for inserting something new...\n//     }\n//     const requestBody = movie;\n//     // We need to convert the values in JSON for release date (to date)\n//     // And for run time to int\n//     requestBody.release_date = new Date(movie.release_date);\n//     requestBody.runtime = parseInt(movie.runtime, 10); // Here 10 represents the base 10\n//     let requestOptions = {\n//       body: JSON.stringify(requestBody),\n//       method: method,\n//       headers: headers,\n//       credentials: \"include\",\n//     };\n//     fetch(`/admin/movies/${movie.id}`, requestOptions)\n//       .then((response) => response.json())\n//       .then((data) => {\n//         if (data.error) {\n//           console.log(data.error);\n//         } else {\n//           navigate(\"/manage-catalogue\");\n//         }\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//       });\n//   };\n//   const handleChange = (event) => {\n//     let value = event.target.value;\n//     let name = event.target.name;\n//     setMovie({\n//       ...movie,\n//       [name]: value,\n//     });\n//   };\n//   const handleCheck = (event, position) => {\n//     console.log(\"handleCheck called\");\n//     console.log(\"value in handleCheck:\", event.target.value);\n//     console.log(\"Checked is\", event.target.checked);\n//     console.log(\"position is\", position);\n//     let tmpArr = movie.genres;\n//     tmpArr[position].checked = !tmpArr[position].checked;\n//     let tmpIDs = movie.genres_array;\n//     if (!event.target.checked) {\n//       tmpIDs.splice(tmpIDs.indexOf(event.target.value));\n//     } else {\n//       tmpIDs.push(parseInt(event.target.value, 10));\n//     }\n//     setMovie({\n//       ...movie,\n//       genres_array: tmpIDs,\n//     });\n//   };\n//   return (\n//     <div>\n//       <h2>Add/Edit a movie</h2>\n//       <hr />\n//       <pre>{JSON.stringify(movie, null, 3)}</pre>\n//       <form onSubmit={handleSubmit}>\n//         <input type=\"hidden\" name=\"id\" value={movie.id} id=\"id\"></input>\n//         <Input\n//           title={\"Title\"}\n//           className={\"form-control\"}\n//           type={\"text\"}\n//           name={\"title\"}\n//           value={movie.title}\n//           onChange={handleChange(\"title\")}\n//           errorDiv={hasError(\"title\") ? \"text-danger\" : \"d-none\"}\n//           errorMsg={\"Please enter a title\"}\n//         />\n//         <Input\n//           title={\"Release Date\"}\n//           className={\"form-control\"}\n//           type={\"release_date\"}\n//           name={\"title\"}\n//           value={movie.release_date}\n//           onChange={handleChange(\"release_date\")}\n//           errorDiv={hasError(\"release_date\") ? \"text-danger\" : \"d-none\"}\n//           errorMsg={\"Please enter a release date\"}\n//         />\n//         <Input\n//           title={\"Runtime\"}\n//           className={\"form-control\"}\n//           type={\"text\"}\n//           name={\"runtime\"}\n//           value={movie.runtime}\n//           onChange={handleChange(\"runtime\")}\n//           errorDiv={hasError(\"runtime\") ? \"text-danger\" : \"d-none\"}\n//           errorMsg={\"Please enter a runtime\"}\n//         />\n//         <Select\n//           title={\"MPAA Rating\"}\n//           name={\"mpaa_rating\"}\n//           options={mpaaOptions}\n//           onChange={handleChange(\"mpaa_rating\")}\n//           placeHolder={\"Choose...\"}\n//           errorMsg={\"Please Choose\"}\n//           errorDiv={hasError(\"mpaa_rating\") ? \"text-danger\" : \"d-none\"}\n//         />\n//         <TextArea\n//           title={\"Description\"}\n//           name={\"description\"}\n//           value={movie.description}\n//           rows={\"3\"}\n//           onChange={handleChange(\"description\")}\n//           errorMsg={\"Please enter a description\"}\n//           errorDiv={hasError(\"description\") ? \"text-danger\" : \"d-none\"}\n//         />\n//         <hr />\n//         <h3>Genres</h3>\n//         {movie.genres && movie.genres.length > 1 && (\n//           <>\n//             {Array.from(movie.genres).map((g, index) => (\n//               <Checkbox\n//                 title={g.genre}\n//                 name={\"genre\"}\n//                 key={index}\n//                 id={\"genre-\" + index}\n//                 onChange={(event) => handleCheck(event, index)}\n//                 value={g.id}\n//                 checked={movie.genres[index].checked}\n//               />\n//             ))}\n//           </>\n//         )}\n//         <hr />\n//         <button className=\"btn btn-primary\">Save</button>\n//       </form>\n//     </div>\n//   );\n// };\n// export default EditMovie;\nimport{useEffect,useState}from\"react\";import{useNavigate,useOutletContext,useParams}from\"react-router-dom\";import Input from\"./form/Input\";import Select from\"./form/Select\";import TextArea from\"./form/TextArea\";import Checkbox from\"./form/Checkbox\";import{Swal}from\"sweetalert2\";import{jsxs as _jsxs,jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const EditMovie=()=>{const navigate=useNavigate();const{jwtToken}=useOutletContext();const[error,setError]=useState(null);const[errors,setErrors]=useState([]);const mpaaOptions=[{id:\"G\",value:\"G\"},{id:\"PG\",value:\"PG\"},{id:\"PG13\",value:\"PG13\"},{id:\"R\",value:\"R\"},{id:\"NC17\",value:\"NC17\"},{id:\"18A\",value:\"18A\"}];const hasError=key=>{return errors.indexOf(key)!==-1;};const[movie,setMovie]=useState({id:0,title:\"\",release_date:\"\",runtime:\"\",mpaa_rating:\"\",description:\"\",genres:[],genres_array:[Array(13).fill(false)]});let{id}=useParams();if(id===undefined){id=0;}useEffect(()=>{if(jwtToken===\"\"){navigate(\"/login\");return;}if(id===0){/// Adding a movie....\nsetMovie({id:0,title:\"\",release_date:\"\",runtime:\"\",mpaa_rating:\"\",description:\"\",genres:[],genres_array:[Array(13).fill(false)]});const headers=new Headers();headers.append(\"Content-Type\",\"application/json\");const requestOptions={method:\"GET\",headers:headers};fetch(\"\".concat(process.env.REACT_APP_BACKEND,\"/genres\"),requestOptions).then(response=>response.json()).then(data=>{const checks=[];data.forEach(g=>{checks.push({id:g.id,checked:false,genre:g.genre});});setMovie(m=>({...m,genres:checks,genres_array:[]}));}).catch(err=>{console.log(err);});}else{// Edit existing movie logic\nconst headers=new Headers();headers.append(\"Content-Type\",\"application/json\");headers.append(\"Authorization\",\"Bearer \"+jwtToken);const requestOptions={method:\"GET\",headers:headers};fetch(\"\".concat(process.env.REACT_APP_BACKEND,\"/admin/movies/\").concat(id),requestOptions).then(response=>{if(response.status!==200){setError(\"Invalid response code: \"+response.status);}return response.json();}).then(data=>{/// Fix the release date...\ndata.movie.release_date=new Date(data.movie.release_date).toISOString().split(\"T\")[0];const checks=[];data.genres.forEach(g=>{if(data.movie.genres_array.indexOf(g.id)!==-1){checks.push({id:g.id,checked:true,genere:g.genre});}else{checks.push({id:g.id,checked:false,genere:g.genre});}});////// Set the state....\nsetMovie({...data.movie,genres:checks});}).catch(err=>{console.log(err);});}},[id,jwtToken,navigate]);const handleSubmit=event=>{event.preventDefault();let errors=[];let required=[{field:movie.title,name:\"title\"},{field:movie.release_date,name:\"release_date\"},{field:movie.runtime,name:\"runtime\"},{field:movie.description,name:\"description\"},{field:movie.mpaa_rating,name:\"mpaa_rating\"}];required.forEach(obj=>{if(obj.field===\"\"){errors.push(obj.name);}});if(movie.genres_array.length===0){Swal.fire({title:\"Error!\",text:\"You must choose at least one genre\",icon:\"error\",confirmButtonText:\"OK\"});errors.push(\"genres\");}setErrors(errors);if(errors.length>0){return false;}const headers=new Headers();headers.append(\"Content-Type\",\"application/json\");headers.append(\"Authorization\",\"Bearer \"+jwtToken);let method=\"PUT\";if(movie.id>0){method=\"PATCH\";}const requestBody=movie;requestBody.release_date=new Date(movie.release_date);requestBody.runtime=parseInt(movie.runtime,10);let requestOptions={body:JSON.stringify(requestBody),method:method,headers:headers,credentials:\"include\"};fetch(\"\".concat(process.env.REACT_APP_BACKEND,\"/admin/movies/\").concat(movie.id),requestOptions).then(response=>response.json()).then(data=>{if(data.error){console.log(data.error);}else{navigate(\"/manage-catalogue\");}}).catch(err=>{console.log(err);});};const handleChange=event=>{let value=event.target.value;let name=event.target.name;setMovie({...movie,[name]:value});};const handleCheck=(event,position)=>{let tmpArr=movie.genres;tmpArr[position].checked=!tmpArr[position].checked;let tmpIDs=movie.genres_array;if(!event.target.checked){tmpIDs.splice(tmpIDs.indexOf(event.target.value),1);}else{tmpIDs.push(parseInt(event.target.value,10));}setMovie({...movie,genres_array:tmpIDs});};const confirmDelete=()=>{Swal.fire({title:\"Delete movie?\",text:\"You cannot undo this action\",icon:\"warning\",showCancelButton:true,confirmButtonColor:\"#3085d6\",cancelButtonColor:\"#d33\",confirmButtonText:\"Yes, delete it!\"}).then(result=>{if(result.isConfirmed){let headers=new Headers();headers.append(\"Authorization\",\"Bearer \"+jwtToken);const requestOptions={method:\"DELETE\",headers:headers};fetch(\"\".concat(process.env.REACT_APP_BACKEND,\"/admin/movies/\").concat(movie.id),requestOptions).then(response=>response.json()).then(data=>{if(data.error){console.log(data.error);}else{navigate(\"/manage-catalogue\");}}).catch(error=>{console.log(error);});}});};if(error!==null){return/*#__PURE__*/_jsxs(\"div\",{children:[\"Error :\",error.message]});}else{return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Add/Edit a movie\"}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"hidden\",name:\"id\",value:movie.id,id:\"id\"}),/*#__PURE__*/_jsx(Input,{title:\"Title\",className:\"form-control\",type:\"text\",name:\"title\",value:movie.title,onChange:handleChange,errorDiv:hasError(\"title\")?\"text-danger\":\"d-none\",errorMsg:\"Please enter a title\"}),/*#__PURE__*/_jsx(Input,{title:\"Release Date\",className:\"form-control\",type:\"date\",name:\"release_date\",value:movie.release_date,onChange:handleChange,errorDiv:hasError(\"release_date\")?\"text-danger\":\"d-none\",errorMsg:\"Please enter a release date\"}),/*#__PURE__*/_jsx(Input,{title:\"Runtime\",className:\"form-control\",type:\"text\",name:\"runtime\",value:movie.runtime,onChange:handleChange,errorDiv:hasError(\"runtime\")?\"text-danger\":\"d-none\",errorMsg:\"Please enter a runtime\"}),/*#__PURE__*/_jsx(Select,{title:\"MPAA Rating\",name:\"mpaa_rating\",options:mpaaOptions,value:movie.mpaa_rating,onChange:handleChange,placeHolder:\"Choose...\",errorMsg:\"Please Choose\",errorDiv:hasError(\"mpaa_rating\")?\"text-danger\":\"d-none\"}),/*#__PURE__*/_jsx(TextArea,{title:\"Description\",name:\"description\",value:movie.description,rows:\"3\",onChange:handleChange,errorMsg:\"Please enter a description\",errorDiv:hasError(\"description\")?\"text-danger\":\"d-none\"}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"h3\",{children:\"Genres\"}),movie.genres&&movie.genres.length>1&&/*#__PURE__*/_jsx(_Fragment,{children:Array.from(movie.genres).map((g,index)=>/*#__PURE__*/_jsx(Checkbox,{title:g.genre,name:\"genre\",id:\"genre-\"+index,onChange:event=>handleCheck(event,index),value:g.id,checked:movie.genres[index].checked},index))}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",children:\"Save\"}),movie.id>0&&/*#__PURE__*/_jsx(\"a\",{href:\"#!\",className:\"btn btn-danger ms-2\",onClick:confirmDelete,children:\"Delete Movie\"})]})]});}};export default EditMovie;","map":{"version":3,"names":["useEffect","useState","useNavigate","useOutletContext","useParams","Input","Select","TextArea","Checkbox","Swal","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","EditMovie","navigate","jwtToken","error","setError","errors","setErrors","mpaaOptions","id","value","hasError","key","indexOf","movie","setMovie","title","release_date","runtime","mpaa_rating","description","genres","genres_array","Array","fill","undefined","headers","Headers","append","requestOptions","method","fetch","concat","process","env","REACT_APP_BACKEND","then","response","json","data","checks","forEach","g","push","checked","genre","m","catch","err","console","log","status","Date","toISOString","split","genere","handleSubmit","event","preventDefault","required","field","name","obj","length","fire","text","icon","confirmButtonText","requestBody","parseInt","body","JSON","stringify","credentials","handleChange","target","handleCheck","position","tmpArr","tmpIDs","splice","confirmDelete","showCancelButton","confirmButtonColor","cancelButtonColor","result","isConfirmed","children","message","onSubmit","type","className","onChange","errorDiv","errorMsg","options","placeHolder","rows","from","map","index","href","onClick"],"sources":["D:/Go/React-With-Go/go-movies-front-end/src/components/EditMovie.js"],"sourcesContent":["// import { useEffect, useState } from \"react\";\r\n// import { useNavigate, useOutletContext, useParams } from \"react-router-dom\";\r\n// import Input from \"./form/Input\";\r\n// import Select from \"./form/Select\";\r\n// import TextArea from \"./form/TextArea\";\r\n// import Checkbox from \"./form/Checkbox\";\r\n// import { Swal } from \"sweetalert2\";\r\n\r\n// const EditMovie = () => {\r\n//   const navigate = useNavigate();\r\n//   const { jwtToken } = useOutletContext();\r\n\r\n//   const [error, setError] = useState(null);\r\n\r\n//   const [errors, setErrors] = useState([]);\r\n\r\n//   const mpaaOptions = [\r\n//     { id: \"G\", value: \"G\" },\r\n//     { id: \"PG\", value: \"PG\" },\r\n//     { id: \"PG13\", value: \"PG13\" },\r\n//     { id: \"R\", value: \"R\" },\r\n//     { id: \"NC17\", value: \"NC17\" },\r\n//     { id: \"18A\", value: \"18A\" },\r\n//   ];\r\n\r\n//   const hasError = (key) => {\r\n//     return errors.indexOf(key) !== -1;\r\n//   };\r\n\r\n//   const [movie, setMovie] = useState({\r\n//     id: 0,\r\n//     title: \"\",\r\n//     release_date: \"\",\r\n//     runtime: \"\",\r\n//     mpaa_rating: \"\",\r\n//     description: \"\",\r\n//     genres: [],\r\n//     genres_array: [Array(13).fill(false)],\r\n//   });\r\n\r\n//   ///// Get the ID from the URL by using useParams() hook......\r\n//   let { id } = useParams();\r\n\r\n//   if (id === undefined) {\r\n//     id = 0;\r\n//   }\r\n\r\n//   useEffect(() => {\r\n//     if (jwtToken === \"\") {\r\n//       navigate(\"/login\");\r\n//       return;\r\n//     }\r\n\r\n//     if (id === 0) {\r\n//       /// Adding a movie....\r\n//       setMovie({\r\n//         id: 0,\r\n//         title: \"\",\r\n//         release_date: \"\",\r\n//         runtime: \"\",\r\n//         mpaa_rating: \"\",\r\n//         description: \"\",\r\n//         genres: [],\r\n//         genres_array: [Array(13).fill(false)],\r\n//       });\r\n\r\n//       const headers = new Headers();\r\n//       headers.append(\"Content-Type\", \"application/json\");\r\n\r\n//       const requestOptions = {\r\n//         method: \"GET\",\r\n//         headers: headers,\r\n//       };\r\n\r\n//       fetch(`/genres`, requestOptions)\r\n//         .then((response) => response.json())\r\n//         .then((data) => {\r\n//           const checks = [];\r\n\r\n//           data.forEach((g) => {\r\n//             checks.push({ id: g.id, checked: false, genre: g.genre });\r\n//           });\r\n\r\n//           setMovie((m) => ({\r\n//             ...m,\r\n//             genres: checks,\r\n//             genres_array: [],\r\n//           }));\r\n//         })\r\n//         .catch((err) => {\r\n//           console.log(err);\r\n//         });\r\n//     } else {\r\n//       /// edit an existing movie....\r\n//     }\r\n//   }, [id, jwtToken, navigate]);\r\n\r\n//   const handleSubmit = (event) => {\r\n//     event.preventDefault();\r\n\r\n//     let errors = [];\r\n\r\n//     let required = [\r\n//       {\r\n//         field: movie.title,\r\n//         name: \"title\",\r\n//       },\r\n//       {\r\n//         field: movie.release_date,\r\n//         name: \"release_date\",\r\n//       },\r\n//       {\r\n//         field: movie.runtime,\r\n//         name: \"runtime\",\r\n//       },\r\n//       {\r\n//         field: movie.description,\r\n//         name: \"description\",\r\n//       },\r\n//       {\r\n//         field: movie.mpaa_rating,\r\n//         name: \"mpaa_rating\",\r\n//       },\r\n//     ];\r\n\r\n//     required.forEach(function (obj) {\r\n//       if (obj.field === \"\") {\r\n//         errors.push(obj.name);\r\n//       }\r\n//     });\r\n\r\n//     if (movie.genres_array.length === 0) {\r\n//       Swal.fire({\r\n//         title: \"Error!\",\r\n//         text: \"You must choose atleast one genre\",\r\n//         icon: \"error\",\r\n//         confirmButtonText: \"OK\",\r\n//       });\r\n//       errors.push(\"genres\");\r\n//     }\r\n//     setErrors(errors);\r\n\r\n//     if (errors.length > 0) {\r\n//       return false;\r\n//     }\r\n\r\n//     /// Passed the validation , so save the changes....\r\n//     const headers = new Headers();\r\n//     headers.append(\"Content-Type\", \"application/json\");\r\n//     headers.append(\"Authorization\", \"Bearer \" + jwtToken);\r\n\r\n//     /// Assume that we are adding a new movie......\r\n//     let method = \"PUT\";\r\n\r\n//     if (movie.id > 0) {\r\n//       method = \"PATCH\"; // Here PATCH is for updating a movie and PUT is for inserting something new...\r\n//     }\r\n\r\n//     const requestBody = movie;\r\n//     // We need to convert the values in JSON for release date (to date)\r\n//     // And for run time to int\r\n\r\n//     requestBody.release_date = new Date(movie.release_date);\r\n\r\n//     requestBody.runtime = parseInt(movie.runtime, 10); // Here 10 represents the base 10\r\n\r\n//     let requestOptions = {\r\n//       body: JSON.stringify(requestBody),\r\n//       method: method,\r\n//       headers: headers,\r\n//       credentials: \"include\",\r\n//     };\r\n\r\n//     fetch(`/admin/movies/${movie.id}`, requestOptions)\r\n//       .then((response) => response.json())\r\n//       .then((data) => {\r\n//         if (data.error) {\r\n//           console.log(data.error);\r\n//         } else {\r\n//           navigate(\"/manage-catalogue\");\r\n//         }\r\n//       })\r\n//       .catch((err) => {\r\n//         console.log(err);\r\n//       });\r\n//   };\r\n\r\n//   const handleChange = (event) => {\r\n//     let value = event.target.value;\r\n//     let name = event.target.name;\r\n//     setMovie({\r\n//       ...movie,\r\n//       [name]: value,\r\n//     });\r\n//   };\r\n\r\n//   const handleCheck = (event, position) => {\r\n//     console.log(\"handleCheck called\");\r\n//     console.log(\"value in handleCheck:\", event.target.value);\r\n//     console.log(\"Checked is\", event.target.checked);\r\n//     console.log(\"position is\", position);\r\n\r\n//     let tmpArr = movie.genres;\r\n//     tmpArr[position].checked = !tmpArr[position].checked;\r\n\r\n//     let tmpIDs = movie.genres_array;\r\n//     if (!event.target.checked) {\r\n//       tmpIDs.splice(tmpIDs.indexOf(event.target.value));\r\n//     } else {\r\n//       tmpIDs.push(parseInt(event.target.value, 10));\r\n//     }\r\n\r\n//     setMovie({\r\n//       ...movie,\r\n//       genres_array: tmpIDs,\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Add/Edit a movie</h2>\r\n//       <hr />\r\n//       <pre>{JSON.stringify(movie, null, 3)}</pre>\r\n\r\n//       <form onSubmit={handleSubmit}>\r\n//         <input type=\"hidden\" name=\"id\" value={movie.id} id=\"id\"></input>\r\n//         <Input\r\n//           title={\"Title\"}\r\n//           className={\"form-control\"}\r\n//           type={\"text\"}\r\n//           name={\"title\"}\r\n//           value={movie.title}\r\n//           onChange={handleChange(\"title\")}\r\n//           errorDiv={hasError(\"title\") ? \"text-danger\" : \"d-none\"}\r\n//           errorMsg={\"Please enter a title\"}\r\n//         />\r\n\r\n//         <Input\r\n//           title={\"Release Date\"}\r\n//           className={\"form-control\"}\r\n//           type={\"release_date\"}\r\n//           name={\"title\"}\r\n//           value={movie.release_date}\r\n//           onChange={handleChange(\"release_date\")}\r\n//           errorDiv={hasError(\"release_date\") ? \"text-danger\" : \"d-none\"}\r\n//           errorMsg={\"Please enter a release date\"}\r\n//         />\r\n\r\n//         <Input\r\n//           title={\"Runtime\"}\r\n//           className={\"form-control\"}\r\n//           type={\"text\"}\r\n//           name={\"runtime\"}\r\n//           value={movie.runtime}\r\n//           onChange={handleChange(\"runtime\")}\r\n//           errorDiv={hasError(\"runtime\") ? \"text-danger\" : \"d-none\"}\r\n//           errorMsg={\"Please enter a runtime\"}\r\n//         />\r\n\r\n//         <Select\r\n//           title={\"MPAA Rating\"}\r\n//           name={\"mpaa_rating\"}\r\n//           options={mpaaOptions}\r\n//           onChange={handleChange(\"mpaa_rating\")}\r\n//           placeHolder={\"Choose...\"}\r\n//           errorMsg={\"Please Choose\"}\r\n//           errorDiv={hasError(\"mpaa_rating\") ? \"text-danger\" : \"d-none\"}\r\n//         />\r\n\r\n//         <TextArea\r\n//           title={\"Description\"}\r\n//           name={\"description\"}\r\n//           value={movie.description}\r\n//           rows={\"3\"}\r\n//           onChange={handleChange(\"description\")}\r\n//           errorMsg={\"Please enter a description\"}\r\n//           errorDiv={hasError(\"description\") ? \"text-danger\" : \"d-none\"}\r\n//         />\r\n\r\n//         <hr />\r\n\r\n//         <h3>Genres</h3>\r\n//         {movie.genres && movie.genres.length > 1 && (\r\n//           <>\r\n//             {Array.from(movie.genres).map((g, index) => (\r\n//               <Checkbox\r\n//                 title={g.genre}\r\n//                 name={\"genre\"}\r\n//                 key={index}\r\n//                 id={\"genre-\" + index}\r\n//                 onChange={(event) => handleCheck(event, index)}\r\n//                 value={g.id}\r\n//                 checked={movie.genres[index].checked}\r\n//               />\r\n//             ))}\r\n//           </>\r\n//         )}\r\n\r\n//         <hr />\r\n\r\n//         <button className=\"btn btn-primary\">Save</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default EditMovie;\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate, useOutletContext, useParams } from \"react-router-dom\";\r\nimport Input from \"./form/Input\";\r\nimport Select from \"./form/Select\";\r\nimport TextArea from \"./form/TextArea\";\r\nimport Checkbox from \"./form/Checkbox\";\r\nimport { Swal } from \"sweetalert2\";\r\n\r\nconst EditMovie = () => {\r\n  const navigate = useNavigate();\r\n  const { jwtToken } = useOutletContext();\r\n\r\n  const [error, setError] = useState(null);\r\n  const [errors, setErrors] = useState([]);\r\n\r\n  const mpaaOptions = [\r\n    { id: \"G\", value: \"G\" },\r\n    { id: \"PG\", value: \"PG\" },\r\n    { id: \"PG13\", value: \"PG13\" },\r\n    { id: \"R\", value: \"R\" },\r\n    { id: \"NC17\", value: \"NC17\" },\r\n    { id: \"18A\", value: \"18A\" },\r\n  ];\r\n\r\n  const hasError = (key) => {\r\n    return errors.indexOf(key) !== -1;\r\n  };\r\n\r\n  const [movie, setMovie] = useState({\r\n    id: 0,\r\n    title: \"\",\r\n    release_date: \"\",\r\n    runtime: \"\",\r\n    mpaa_rating: \"\",\r\n    description: \"\",\r\n    genres: [],\r\n    genres_array: [Array(13).fill(false)],\r\n  });\r\n\r\n  let { id } = useParams();\r\n  if (id === undefined) {\r\n    id = 0;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (jwtToken === \"\") {\r\n      navigate(\"/login\");\r\n      return;\r\n    }\r\n\r\n    if (id === 0) {\r\n      /// Adding a movie....\r\n      setMovie({\r\n        id: 0,\r\n        title: \"\",\r\n        release_date: \"\",\r\n        runtime: \"\",\r\n        mpaa_rating: \"\",\r\n        description: \"\",\r\n        genres: [],\r\n        genres_array: [Array(13).fill(false)],\r\n      });\r\n\r\n      const headers = new Headers();\r\n      headers.append(\"Content-Type\", \"application/json\");\r\n\r\n      const requestOptions = {\r\n        method: \"GET\",\r\n        headers: headers,\r\n      };\r\n\r\n      fetch(`${process.env.REACT_APP_BACKEND}/genres`, requestOptions)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          const checks = [];\r\n          data.forEach((g) => {\r\n            checks.push({ id: g.id, checked: false, genre: g.genre });\r\n          });\r\n\r\n          setMovie((m) => ({\r\n            ...m,\r\n            genres: checks,\r\n            genres_array: [],\r\n          }));\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      // Edit existing movie logic\r\n      const headers = new Headers();\r\n      headers.append(\"Content-Type\", \"application/json\");\r\n      headers.append(\"Authorization\", \"Bearer \" + jwtToken);\r\n\r\n      const requestOptions = {\r\n        method: \"GET\",\r\n        headers: headers,\r\n      };\r\n\r\n      fetch(\r\n        `${process.env.REACT_APP_BACKEND}/admin/movies/${id}`,\r\n        requestOptions\r\n      )\r\n        .then((response) => {\r\n          if (response.status !== 200) {\r\n            setError(\"Invalid response code: \" + response.status);\r\n          }\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          /// Fix the release date...\r\n          data.movie.release_date = new Date(data.movie.release_date)\r\n            .toISOString()\r\n            .split(\"T\")[0];\r\n\r\n          const checks = [];\r\n\r\n          data.genres.forEach((g) => {\r\n            if (data.movie.genres_array.indexOf(g.id) !== -1) {\r\n              checks.push({ id: g.id, checked: true, genere: g.genre });\r\n            } else {\r\n              checks.push({ id: g.id, checked: false, genere: g.genre });\r\n            }\r\n          });\r\n\r\n          ////// Set the state....\r\n          setMovie({\r\n            ...data.movie,\r\n            genres: checks,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, [id, jwtToken, navigate]);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    let errors = [];\r\n    let required = [\r\n      { field: movie.title, name: \"title\" },\r\n      { field: movie.release_date, name: \"release_date\" },\r\n      { field: movie.runtime, name: \"runtime\" },\r\n      { field: movie.description, name: \"description\" },\r\n      { field: movie.mpaa_rating, name: \"mpaa_rating\" },\r\n    ];\r\n\r\n    required.forEach((obj) => {\r\n      if (obj.field === \"\") {\r\n        errors.push(obj.name);\r\n      }\r\n    });\r\n\r\n    if (movie.genres_array.length === 0) {\r\n      Swal.fire({\r\n        title: \"Error!\",\r\n        text: \"You must choose at least one genre\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"OK\",\r\n      });\r\n      errors.push(\"genres\");\r\n    }\r\n\r\n    setErrors(errors);\r\n    if (errors.length > 0) {\r\n      return false;\r\n    }\r\n\r\n    const headers = new Headers();\r\n    headers.append(\"Content-Type\", \"application/json\");\r\n    headers.append(\"Authorization\", \"Bearer \" + jwtToken);\r\n\r\n    let method = \"PUT\";\r\n    if (movie.id > 0) {\r\n      method = \"PATCH\";\r\n    }\r\n\r\n    const requestBody = movie;\r\n    requestBody.release_date = new Date(movie.release_date);\r\n    requestBody.runtime = parseInt(movie.runtime, 10);\r\n\r\n    let requestOptions = {\r\n      body: JSON.stringify(requestBody),\r\n      method: method,\r\n      headers: headers,\r\n      credentials: \"include\",\r\n    };\r\n\r\n    fetch(\r\n      `${process.env.REACT_APP_BACKEND}/admin/movies/${movie.id}`,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.error) {\r\n          console.log(data.error);\r\n        } else {\r\n          navigate(\"/manage-catalogue\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    let value = event.target.value;\r\n    let name = event.target.name;\r\n    setMovie({\r\n      ...movie,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleCheck = (event, position) => {\r\n    let tmpArr = movie.genres;\r\n    tmpArr[position].checked = !tmpArr[position].checked;\r\n\r\n    let tmpIDs = movie.genres_array;\r\n    if (!event.target.checked) {\r\n      tmpIDs.splice(tmpIDs.indexOf(event.target.value), 1);\r\n    } else {\r\n      tmpIDs.push(parseInt(event.target.value, 10));\r\n    }\r\n\r\n    setMovie({\r\n      ...movie,\r\n      genres_array: tmpIDs,\r\n    });\r\n  };\r\n\r\n  const confirmDelete = () => {\r\n    Swal.fire({\r\n      title: \"Delete movie?\",\r\n      text: \"You cannot undo this action\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        let headers = new Headers();\r\n\r\n        headers.append(\"Authorization\", \"Bearer \" + jwtToken);\r\n\r\n        const requestOptions = {\r\n          method: \"DELETE\",\r\n          headers: headers,\r\n        };\r\n\r\n        fetch(\r\n          `${process.env.REACT_APP_BACKEND}/admin/movies/${movie.id}`,\r\n          requestOptions\r\n        )\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            if (data.error) {\r\n              console.log(data.error);\r\n            } else {\r\n              navigate(\"/manage-catalogue\");\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  if (error !== null) {\r\n    return <div>Error :{error.message}</div>;\r\n  } else {\r\n    return (\r\n      <div>\r\n        <h2>Add/Edit a movie</h2>\r\n        <hr />\r\n        {/* <pre>{JSON.stringify(movie, null, 3)}</pre> */}\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <input type=\"hidden\" name=\"id\" value={movie.id} id=\"id\" />\r\n          <Input\r\n            title={\"Title\"}\r\n            className={\"form-control\"}\r\n            type={\"text\"}\r\n            name={\"title\"}\r\n            value={movie.title}\r\n            onChange={handleChange}\r\n            errorDiv={hasError(\"title\") ? \"text-danger\" : \"d-none\"}\r\n            errorMsg={\"Please enter a title\"}\r\n          />\r\n          <Input\r\n            title={\"Release Date\"}\r\n            className={\"form-control\"}\r\n            type={\"date\"}\r\n            name={\"release_date\"}\r\n            value={movie.release_date}\r\n            onChange={handleChange}\r\n            errorDiv={hasError(\"release_date\") ? \"text-danger\" : \"d-none\"}\r\n            errorMsg={\"Please enter a release date\"}\r\n          />\r\n          <Input\r\n            title={\"Runtime\"}\r\n            className={\"form-control\"}\r\n            type={\"text\"}\r\n            name={\"runtime\"}\r\n            value={movie.runtime}\r\n            onChange={handleChange}\r\n            errorDiv={hasError(\"runtime\") ? \"text-danger\" : \"d-none\"}\r\n            errorMsg={\"Please enter a runtime\"}\r\n          />\r\n          <Select\r\n            title={\"MPAA Rating\"}\r\n            name={\"mpaa_rating\"}\r\n            options={mpaaOptions}\r\n            value={movie.mpaa_rating}\r\n            onChange={handleChange}\r\n            placeHolder={\"Choose...\"}\r\n            errorMsg={\"Please Choose\"}\r\n            errorDiv={hasError(\"mpaa_rating\") ? \"text-danger\" : \"d-none\"}\r\n          />\r\n          <TextArea\r\n            title={\"Description\"}\r\n            name={\"description\"}\r\n            value={movie.description}\r\n            rows={\"3\"}\r\n            onChange={handleChange}\r\n            errorMsg={\"Please enter a description\"}\r\n            errorDiv={hasError(\"description\") ? \"text-danger\" : \"d-none\"}\r\n          />\r\n          <hr />\r\n          <h3>Genres</h3>\r\n          {movie.genres && movie.genres.length > 1 && (\r\n            <>\r\n              {Array.from(movie.genres).map((g, index) => (\r\n                <Checkbox\r\n                  title={g.genre}\r\n                  name={\"genre\"}\r\n                  key={index}\r\n                  id={\"genre-\" + index}\r\n                  onChange={(event) => handleCheck(event, index)}\r\n                  value={g.id}\r\n                  checked={movie.genres[index].checked}\r\n                />\r\n              ))}\r\n            </>\r\n          )}\r\n          <hr />\r\n          <button className=\"btn btn-primary\">Save</button>\r\n\r\n          {movie.id > 0 && (\r\n            <a\r\n              href=\"#!\"\r\n              className=\"btn btn-danger ms-2\"\r\n              onClick={confirmDelete}\r\n            >\r\n              Delete Movie\r\n            </a>\r\n          )}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default EditMovie;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}