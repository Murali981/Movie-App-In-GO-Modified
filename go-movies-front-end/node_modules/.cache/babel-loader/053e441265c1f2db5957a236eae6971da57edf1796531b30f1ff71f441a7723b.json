{"ast":null,"code":"var _jsxFileName = \"D:\\\\Go\\\\React-With-Go\\\\go-movies-front-end\\\\src\\\\components\\\\Genres.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Genres = () => {\n  _s();\n  const [genres, setGenres] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    const requestOptions = {\n      method: \"GET\",\n      headers: headers\n    };\n    fetch(`/genres`, requestOptions).then(response => response.json()).then(data => {\n      if (data.error) {\n        setError(data.message);\n      } else {\n        setGenres(data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  if (error !== null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error : \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Genres\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-group\",\n        children: genres.map(g => /*#__PURE__*/_jsxDEV(Link, {\n          className: \"list-group-item list-group-item-action\",\n          to: `/genres/${g.id}`\n        }, g.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(Genres, \"bT1BBTZ8OrZu4/Dpfp5anTdbrRk=\");\n_c = Genres;\nexport default Genres;\nvar _c;\n$RefreshReg$(_c, \"Genres\");","map":{"version":3,"names":["useEffect","useState","Link","jsxDEV","_jsxDEV","Genres","_s","genres","setGenres","error","setError","headers","Headers","append","requestOptions","method","fetch","then","response","json","data","message","catch","err","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","g","to","id","_c","$RefreshReg$"],"sources":["D:/Go/React-With-Go/go-movies-front-end/src/components/Genres.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Genres = () => {\r\n  const [genres, setGenres] = useState([]);\r\n\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const headers = new Headers();\r\n\r\n    headers.append(\"Content-Type\", \"application/json\");\r\n\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(`/genres`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setError(data.message);\r\n        } else {\r\n          setGenres(data);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  if (error !== null) {\r\n    return <div>Error : {error.message}</div>;\r\n  } else {\r\n    return (\r\n      <div>\r\n        <h2>Genres</h2>\r\n        <hr />\r\n\r\n        <div className=\"list-group\">\r\n          {genres.map((g) => (\r\n            <Link\r\n              key={g.id}\r\n              className=\"list-group-item list-group-item-action\"\r\n              to={`/genres/${g.id}`}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Genres;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMW,OAAO,GAAG,IAAIC,OAAO,CAAC,CAAC;IAE7BD,OAAO,CAACE,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC;IAElD,MAAMC,cAAc,GAAG;MACrBC,MAAM,EAAE,KAAK;MACbJ,OAAO,EAAEA;IACX,CAAC;IAEDK,KAAK,CAAE,SAAQ,EAAEF,cAAc,CAAC,CAC7BG,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd,IAAIA,IAAI,CAACX,KAAK,EAAE;QACdC,QAAQ,CAACU,IAAI,CAACC,OAAO,CAAC;MACxB,CAAC,MAAM;QACLb,SAAS,CAACY,IAAI,CAAC;MACjB;IACF,CAAC,CAAC,CACDE,KAAK,CAAEC,GAAG,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAId,KAAK,KAAK,IAAI,EAAE;IAClB,oBAAOL,OAAA;MAAAsB,QAAA,GAAK,UAAQ,EAACjB,KAAK,CAACY,OAAO;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC3C,CAAC,MAAM;IACL,oBACE1B,OAAA;MAAAsB,QAAA,gBACEtB,OAAA;QAAAsB,QAAA,EAAI;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACf1B,OAAA;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAEN1B,OAAA;QAAK2B,SAAS,EAAC,YAAY;QAAAL,QAAA,EACxBnB,MAAM,CAACyB,GAAG,CAAEC,CAAC,iBACZ7B,OAAA,CAACF,IAAI;UAEH6B,SAAS,EAAC,wCAAwC;UAClDG,EAAE,EAAG,WAAUD,CAAC,CAACE,EAAG;QAAE,GAFjBF,CAAC,CAACE,EAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGV,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;AACF,CAAC;AAACxB,EAAA,CAjDID,MAAM;AAAA+B,EAAA,GAAN/B,MAAM;AAmDZ,eAAeA,MAAM;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}